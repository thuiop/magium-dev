<script src="/scripts/utils.js"></script>
<script src="/scripts/stats.js"></script>
<script>
    // Check if some of the stats are undefined.
    // If they are, update every stat cookie with the default value 0, and reload the page.
    const stats_variables = getDefaultStatsVariables()
    
    const locals = <%- JSON.stringify(locals) %>;

    "DOMContentLoaded htmx:afterSwap".split(" ").forEach(function(e){
        document.addEventListener(e, function() {
            const updateCallback = () => {window.location.reload();}
            handleMissingStats(locals, storeItem, updateCallback)
        })
    })
</script>
<script>
    // Logic for updating stats

    // Define temporary (aux) global variables for the stats
    // Can also later set up two-way binding directly with the HTML elements using Object.defineProperty
    const stats_aux_mapping = getAuxiliaryStatMapping()
    var stats_aux = getAuxiliaryStats(locals, stats_aux_mapping);
    initializeStats(stats_aux, stats_aux_mapping);
    var stats_changed = false; // This variable is used to check if the stats have been changed

    function updateStat(stat, stat_aux_key, stat_field_id, stat_field_value_id) {
        var stat_aux_value = stats_aux[stat_aux_key];
        var stat_max = locals["v_max_stat"];
        var available_points = stats_aux["v_available_points_aux"];

        if ((stat_aux_value >= stat_max) || (available_points <= 0)) { return; }
        stats_aux[stat_aux_key] += 1;
        stats_aux["v_available_points_aux"] -= 1;
        document.getElementById("available_points_value").innerHTML = stats_aux["v_available_points_aux"];
        document.getElementById(stat_field_value_id).innerHTML = stats_aux[stat_aux_key];
        document.getElementById(stat_field_id).className = "stat-field updated";
        stats_changed = true;
    }

    function confirmStats() {
        if (!stats_changed) { return; }
        // Update the stats cookies
        for (var stat_aux in stats_aux) {
            var stat = stat_aux.split("_aux")[0];
            document.cookie = stat + "=" + stats_aux[stat_aux];
        }
        // Refresh the page to reflect the changes
        window.location.reload();
    }
</script>
<div class="stats-container">
    <button class="stat-field magic-special" id="magical_power" onclick="void(0)" 
    style="grid-column: 1; grid-row: 1;">
    <!-- This initial content is tied to the EJS variable only once.
    Later, the content for each of the stat-field is tied to the auxiliary variables -->
        Magical Power: 
        <span id="magical_power_value">
            <% if (locals.v_magical_power) { %> <%= v_magical_power %> <% } else {%> 0 <% } %>
        </span>
    </button>

    <button class="stat-field magic-special" id="magical_knowledge" onclick="void(0)" 
    style="grid-column: 2; grid-row: 1;">
        Magical Knowledge: 
        <span id="magical_knowledge_value">
            <% if (locals.v_magical_knowledge) { %> <%= v_magical_knowledge %> <% } else {%> 0 <% } %>
        </span>
    </button>

    <button class="stat-field available" id="available_points" onclick="void(0)" 
    style="grid-column: 1 / span 2; grid-row: 2;">
        Available Points: 
        <span id="available_points_value">
        <% if (locals.v_available_points) { %> <%= v_available_points %> <% } else {%> 0 <% } %>
        </span>
    </button>

    <button class="stat-field" id="strength" 
    onclick="updateStat('strength', 'v_strength_aux', 'strength', 'strength_value')" 
    style="grid-column: 1; grid-row: 3;">
        Strength: 
        <span id="strength_value">
        <% if (locals.v_strength) { %> <%= v_strength %> <% } else {%> 0 <% } %>
        </span>
        /
        <% if (locals.v_max_stat) { %> <%= v_max_stat %> <% } else {%> 3 <% } %>
    </button>

    <button class="stat-field" id="toughness" 
    onclick="updateStat('toughness', 'v_toughness_aux', 'toughness', 'toughness_value')"
    style="grid-column: 1; grid-row: 4;">
        Toughness: 
        <span id="toughness_value">
        <% if (locals.v_toughness) { %> <%= v_toughness %> <% } else {%> 0 <% } %>
        </span>
        /
        <% if (locals.v_max_stat) { %> <%= v_max_stat %> <% } else {%> 3 <% } %>

    <button class="stat-field" id="agility" 
    onclick="updateStat('agility', 'v_agility_aux', 'agility', 'agility_value')"
    style="grid-column: 2; grid-row: 3;">
        Speed: 
        <span id="agility_value">
        <% if (locals.v_agility) { %> <%= v_agility %> <% } else {%> 0 <% } %>
        </span>
        /
        <% if (locals.v_max_stat) { %> <%= v_max_stat %> <% } else {%> 3 <% } %>
    </button>

    <button class="stat-field" id="reflexes"
    onclick="updateStat('reflexes', 'v_reflexes_aux', 'reflexes', 'reflexes_value')"
    style="grid-column: 2; grid-row: 4;">
        Reflexes: 
        <span id="reflexes_value">
        <% if (locals.v_reflexes) { %> <%= v_reflexes %> <% } else {%> 0 <% } %>
        </span>
        /
        <% if (locals.v_max_stat) { %> <%= v_max_stat %> <% } else {%> 3 <% } %>
    </button>

    <button class="stat-field" id="hearing"
    onclick="updateStat('hearing', 'v_hearing_aux', 'hearing', 'hearing_value')"
    style="grid-column: 1; grid-row: 5;">
        Hearing:
        <span id="hearing_value">
        <% if (locals.v_hearing) { %> <%= v_hearing %> <% } else {%> 0 <% } %>
        </span>
        /
        <% if (locals.v_max_stat) { %> <%= v_max_stat %> <% } else {%> 3 <% } %>
    </button>

    <button class="stat-field" id="perception" 
    onclick="updateStat('perception', 'v_perception_aux', 'perception', 'perception_value')"
    style="grid-column: 2; grid-row: 5;">
        Observation:
        <span id="perception_value">
        <% if (locals.v_perception) { %> <%= v_perception %> <% } else {%> 0 <% } %>
        </span>
        /
        <% if (locals.v_max_stat) { %> <%= v_max_stat %> <% } else {%> 3 <% } %>
    </button>

    <button class="stat-field" id="ancient_languages"
    onclick="updateStat('ancient_languages', 'v_ancient_languages_aux', 'ancient_languages', 'ancient_languages_value')"
    style="grid-column: 1 / span 2; grid-row: 6;">
        Ancient Languages: 
        <span id="ancient_languages_value">
        <% if (locals.v_ancient_languages) { %> <%= v_ancient_languages %> <% } else {%> 0 <% } %>
        </span>
        /
        <% if (locals.v_max_stat) { %> <%= v_max_stat %> <% } else {%> 3 <% } %>
    </button>

    <button class="stat-field" id="combat_technique"
    onclick="updateStat('combat_technique', 'v_combat_technique_aux', 'combat_technique', 'combat_technique_value')"
    style="grid-column: 1 / span 2; grid-row: 7;">
        Combat Technique: 
        <span id="combat_technique_value">
        <% if (locals.v_combat_technique) { %> <%= v_combat_technique %> <% } else {%> 0 <% } %>
        </span>
        /
        <% if (locals.v_max_stat) { %> <%= v_max_stat %> <% } else {%> 3 <% } %>
    </button>

    <button class="stat-field" id="premonition" 
    onclick="updateStat('premonition', 'v_premonition_aux', 'premonition', 'premonition_value')"
    style="grid-column: 1 / span 2; grid-row: 8;">
        Premonition: 
        <span id="premonition_value">
        <% if (locals.v_premonition) { %> <%= v_premonition %> <% } else {%> 0 <% } %>
        </span>
        /
        <% if (locals.v_max_stat) { %> <%= v_max_stat %> <% } else {%> 3 <% } %>
    </button>

    <button class="stat-field" id="bluff"
    onclick="updateStat('bluff', 'v_bluff_aux', 'bluff', 'bluff_value')"
    style="grid-column: 1 / span 2; grid-row: 9;">
        Bluff (Aura Concealment):
        <span id="bluff_value">
        <% if (locals.v_bluff) { %> <%= v_bluff %> <% } else {%> 0 <% } %>
        </span>
        /
        <% if (locals.v_max_stat) { %> <%= v_max_stat %> <% } else {%> 3 <% } %>
    </button>

    <button class="stat-field" id="magical_sense"
    onclick="updateStat('magical_sense', 'v_magical_sense_aux', 'magical_sense', 'magical_sense_value')"
    style="grid-column: 1; grid-row: 10;">
        Magical Sense:
        <span id="magical_sense_value">
        <% if (locals.v_magical_sense) { %> <%= v_magical_sense %> <% } else {%> 0 <% } %>
        </span>
        /
        <% if (locals.v_max_stat) { %> <%= v_max_stat %> <% } else {%> 3 <% } %>
    </button>

    <button class="stat-field" id="aura_hardening"
    onclick="updateStat('aura_hardening', 'v_aura_hardening_aux', 'aura_hardening', 'aura_hardening_value')"
    style="grid-column: 2; grid-row: 10;">
        Aura Hardening:
        <span id="aura_hardening_value">
        <% if (locals.v_aura_hardening) { %> <%= v_aura_hardening %> <% } else {%> 0 <% } %>
        </span>
        /
        <% if (locals.v_max_stat) { %> <%= v_max_stat %> <% } else {%> 3 <% } %>
    </button>
</div>
<div id="stats-button-container">
<button onclick="stats_aux = getAuxiliaryStats(locals, stats_aux_mapping);initializeStats(stats_aux, stats_aux_mapping);stats_changed = false;" 
    id="cancel-changes">Cancel Changes</button>
<button onclick="confirmStats()" 
    id="confirm-changes">Confirm Changes</button>
<button hx-get="/" hx-target="#content" hx-swap="innerHTML" hx-push-url="/"
    id="return-to-game">Return to game</button>
</div>
<div style="display:none">
    <h2 id="header" hx-swap-oob="true">
        Stats
    </h2>
</div>
